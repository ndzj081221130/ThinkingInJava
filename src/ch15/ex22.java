package ch15;import java.lang.reflect.Constructor;import java.lang.reflect.InvocationTargetException;import ch14.Person;public class ex22 {	public static <T> T create(Class<T> type,String a){		T testT = null;		try {//			T aT = type.newInstance();???			Constructor<T >constructor = type.getDeclaredConstructor(new Class[]{String.class,String.class,String.class});			 testT = (T) constructor.newInstance(new Object[]{"A","B","c"});		} catch (InstantiationException e) {			// TODO Auto-generated catch block			e.printStackTrace();		} catch (IllegalAccessException e) {			// TODO Auto-generated catch block			e.printStackTrace();		} catch (SecurityException e) {			// TODO Auto-generated catch block			e.printStackTrace();		} catch (NoSuchMethodException e) {			// TODO Auto-generated catch block			e.printStackTrace();		} catch (IllegalArgumentException e) {			// TODO Auto-generated catch block			e.printStackTrace();		} catch (InvocationTargetException e) {			// TODO Auto-generated catch block			e.printStackTrace();		}		return testT;	}	/**	 * @param args	 */	public static void main(String[] args) {		// TODO Auto-generated method stub		Person helloPerson = ex22.create(Person.class,"A")				;		System.out.println(helloPerson);	}}