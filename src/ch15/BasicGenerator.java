package ch15;public class BasicGenerator <T> implements Generator<T>{	/**	 * @param args	 */	public static void main(String[] args) {//		Generator<Coffee> gen = BasicGenerator.create(Coffee.class);//		for (int i = 0; i < 5; i++) {//			System.out.println(gen.next());//		}		Generator<Coffee> gen = new BasicGenerator<Coffee>(Coffee.class);		for (int i = 0; i < 5; i++) {			System.out.println(gen.next());		}	}	private Class<T> typeClass;	public BasicGenerator(Class<T> type){		this.typeClass = type;			}		@Override	public T next() {				try {			return typeClass.newInstance();		} catch (Exception e) {			throw new RuntimeException();		}	}	public static <T> Generator<T> create(Class<T> type){		return new BasicGenerator<T>(type);	}}