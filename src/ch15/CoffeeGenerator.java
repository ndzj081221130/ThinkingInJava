package ch15;import java.util.Iterator;import java.util.Random;public class CoffeeGenerator implements Generator<Coffee>, Iterable<Coffee> {	private Class[] types = { Mocha.class, Coffee.class };	private Random rand = new Random(47);	private int size = 0;	public CoffeeGenerator(int sz) {		size = sz;	}	/**	 * @param args	 */	public static void main(String[] args) {		// TODO Auto-generated method stub	}	@Override	public Iterator<Coffee> iterator() {				return new CoffeeIterator();	}	@Override	public Coffee next() {		try {			return (Coffee) types[rand.nextInt(types.length)].newInstance();		} catch (Exception e) {			throw new RuntimeException(e);		}	}	class CoffeeIterator implements Iterator<Coffee> {		int count = size;		@Override		public boolean hasNext() {			return count > 0;		}		@Override		public Coffee next() {			count--;			return CoffeeGenerator.this.next();		}		@Override		public void remove() {			throw new UnsupportedOperationException();		}	}}